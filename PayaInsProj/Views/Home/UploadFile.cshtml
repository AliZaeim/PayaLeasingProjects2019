@model PayaInsProj.Models.ViewModels.FileUploadModelViewModel

@{
    ViewBag.Title = "UploadFile";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/fontawesome.min.css" integrity="sha512-v8QQ0YQ3H4K6Ic3PJkym91KoeNT5S3PnDKvqnwqFD1oiqIl653crGZplPdU5KKtHjO0QKcQ2aUlQZYjHczkmGw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<h1 class="text-center alert alert-info">آپلود فایل</h1>
<div class="container">
    <div class="row">
        <div class="col-lg-12">
            @using (Html.BeginForm("UploadFile", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group" id="fileParent">
                        <label class="control-label">فایل اکسل</label>
                        <input type="file" name="File" id="fileUpload" accept=".xlsx,.xls" /><br />
                        <span asp-validation-for="File" class="text-danger"></span>
                        <p id="validationMessage" class="text-danger"></p>
                    </div>
                    <div class="container-fluid mt-2">
                        <div id="preview" class="table-responsive" style="font-size:10px"></div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="آپلود" id="uploadBtn" disabled class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>


<div>
    @Html.ActionLink("بازگشت", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    @*<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.15.6/xlsx.full.min.js"></script>*@
    <script src="~/Scripts/xlsx.full.min.js"></script>
    <script>

        $(document).ready(function () {

            function displayPreview(data) {
                const $preview = $('#preview');
                $preview.before("<h4 id='warningMess' class='text-center alert alert-warning'>اطلاعات فایل انتخاب شده به قرار زیر است در صورت تایید روی دکمه آپلود کلیک کنید</h4>");
                $preview.empty();
                $preview.css("border", "1px solid gray");
                if (data.length === 0) return;

                // Create HTML table
                const $table = $('<table class="table table-bordered">');
                const $tbody = $('<tbody>');

                data.forEach((row, rowIndex) => {
                    const $tr = $('<tr>');
                    row.forEach((cell) => {
                        const $td = $('<td class="text-center align-middle">').text(cell);
                        $tr.append($td);
                    });
                    $tbody.append($tr);
                });

                $table.append($tbody);
                $preview.append($table);
            }
            $('#fileUpload').change(function (e) {
                const file = e.target.files[0];
                const maxSize = 50 * 1024 * 1024; // 50MB in bytes
                const expectedHeaders = ['ردیف', 'تاریخ صدور بیمه نامه', 'بیمه گذار بیمه نامه', 'نوع خودرو', 'شماره کامل بیمه نامه', 'تاریخ شروع بیمه نامه', 'تاریخ پایان بیمه نامه', 'شماره پلاک', 'شماره موتور', 'شماره شاسی', 'خالص حق بیمه + مالیات و عوارض ارزش افزوده', 'کد ملی بیمه گذار', 'بیمه نامه سال چندم']; // Replace with your headers
                if ($('#pmess').length > 0) {
                    $('#pmess').remove();
                }
                if ($("#warningMess").length) {
                    $("#warningMess").remove();
                }
                $("#validationMessage").empty();
                //$('#uploadBtn').attr("disabled", true);
                if ($('#preview').length > 0) {
                    $('#preview').empty();
                }
                // Validate file size
                if (file.size > maxSize) {
                    //alert('حجم فایل از 100 مگابایت بیشتر است!');
                    $("#validationMessage").text('حجم فایل از 50 مگابایت بیشتر است!');
                    //$(this).val(''); // Clear input
                    return;
                }

                // Validate file type
                if (!file.name.match(/\.(xls|xlsx)$/)) {
                    //alert('نوع فایل درست نمی باشد !');
                    $("#validationMessage").text('نوع فایل درست نمی باشد !');
                    //$(this).val('');
                    return;
                }

                // Read the Excel file
                const reader = new FileReader();

                reader.onload = function (e) {
                    const data = new Uint8Array(e.target.result);

                    const workbook = XLSX.read(data, { type: 'array' });

                    // Get first sheet
                    const firstSheet = workbook.Sheets[workbook.SheetNames[0]];

                    // Get headers from first row
                    const headers = [];
                    const range = XLSX.utils.decode_range(firstSheet['!ref']);
                    for (let col = range.s.c; col <= range.e.c; col++) {
                        const cellAddress = XLSX.utils.encode_cell({ r: 0, c: col });
                        const cell = firstSheet[cellAddress];
                        headers.push(cell ? cell.v.trim() : '');
                    }

                    // Compare headers
                    const isValidHeaders = expectedHeaders.every((header, index) =>
                        header === headers[index]
                    );

                    if (!isValidHeaders) {
                        //alert('عناوین ستون ها نادرست هستند!');
                        $("#validationMessage").text('عناوین ستون ها نادرست هستند!');
                        //$('#excelFile').val('');
                        return;
                    }

                    // If all validations pass
                    // if ($('#pmess').length !== 0)
                    // {
                    //     alert('exist p');
                    //     $('#pmess').remove();
                    // }
                    $('#fileParent').after("<p id='pmess' class='text-center bg bg-success text-white mt-2'>فایل معتبر است، در صورت تایید داده های آن، روی دکمه آپلود کلیک کنید</p>")
                    
                    //$('#uploadBtn').removeAttr('disabled');
                    $('#uploadBtn').prop('disabled', false);
                    
                    //alert('Removed');
                    //alert('فایل معتبر است!');
                    // Proceed with your upload logic here
                    // Get first worksheet
                    const sheetName = workbook.SheetNames[0];
                    const worksheet = workbook.Sheets[sheetName];

                    // Convert to JSON
                    const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });

                    // Display preview
                    displayPreview(jsonData);
                };

                reader.onerror = function () {
                    alert('Error reading file!');
                    $('#excelFile').val('');
                };

                reader.readAsArrayBuffer(file);
            });

        });


    </script>
}
